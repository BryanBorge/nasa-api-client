{"version":3,"sources":["components/DateForm/DateForm.js","components/PictureInfo/PictureInfo.js","components/AppBar/Appbar.js","util.js","containers/AstronomyPicOfTheDay/APOD.js","App.js","serviceWorker.js","store/reducers/apod.js","index.js","store/actions/actionTypes.js","components/AppBar/Appbar.module.css","components/DateForm/DateForm.module.css","components/PictureInfo/PictureInfo.module.css","components/RoverInfo/RoverInfo.module.css","containers/AstronomyPicOfTheDay/APOD.module.css","components/RoverForm/RoverForm.module.css","containers/MarsRover/MarsRover.module.css"],"names":["DateForm","props","className","classes","Form","Grid","container","direction","justify","alignItems","item","sm","Input","clearable","value","date","placeholder","onChange","console","log","handleDateChange","maxDate","Date","minDate","format","Button","onClick","handleSubmit","variant","color","getPictureOfTheDay","PictureInfo","credit","copyRight","showInfo","loading","Info","title","split","join","toLocaleDateString","weekday","year","month","day","desc","picture","includes","video","url","controls","src","alt","Img","success","Appbar","AppBar","position","elevation","appBar","Toolbar","toolbar","Typography","noWrap","toolbarTitle","to","link","formatDate","result","replaceAll","APOD","useState","setPicture","setTitle","setDesc","picDate","setPicDate","setCopyright","inputDate","setLoading","setSuccess","useEffect","showToday","a","axios","get","then","res","data","explanation","copyright","catch","err","alert","event","preventDefault","sucess","App","utils","DateFnsUtils","basename","window","location","pathname","exact","path","Boolean","hostname","match","initialState","rootReducer","combineReducers","apod","state","action","items","payload","marsRover","marsRoverReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.5f856165.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport classes from \"./DateForm.module.css\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\n\r\nconst DateForm = props => {\r\n  return (\r\n    <div className={classes.Form}>\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item sm={1.5}>\r\n          <div className={classes.Input}>\r\n            <KeyboardDatePicker\r\n              clearable\r\n              value={props.date}\r\n              placeholder=\"MM/DD/YYYY\"\r\n              onChange={date => {\r\n                console.log(date);\r\n                props.handleDateChange(date);\r\n              }}\r\n              maxDate={new Date()}\r\n              minDate={new Date(\"Fri Jun 16 1995 00:00:00 GMT-0400\")}\r\n              format=\"MM/dd/yyyy\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item sm={1.5}>\r\n          <div className={classes.Button}>\r\n            <Button\r\n              onClick={props.handleSubmit}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Search\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        <Grid item sm={1.5}>\r\n          <div className={classes.Button}>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => props.getPictureOfTheDay(true)}\r\n              className={classes.Button}\r\n            >\r\n              Todays Picture\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateForm;\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport classes from \"./PictureInfo.module.css\";\r\n\r\nconst PictureInfo = (props) => {\r\n  let options = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  let credit = props.copyRight && <p> Image Credit: {props.copyRight}</p>;\r\n  let showInfo = props.loading ? (\r\n    <p> LOADING </p>\r\n  ) : (\r\n    <div>\r\n      <div className={classes.Info}>\r\n        <h2>{props.title}</h2>\r\n        <p>\r\n          {new Date(props.date.split(\"-\").join(\"/\")).toLocaleDateString(\r\n            \"en-US\",\r\n            options\r\n          )}\r\n        </p>\r\n        <p>{props.desc}</p>\r\n        <div>{credit}</div>\r\n      </div>\r\n      <div>\r\n        {props.picture.includes(\"youtube\") ? (\r\n          <ReactPlayer\r\n            className={classes.video}\r\n            url={props.picture}\r\n            controls={true}\r\n          />\r\n        ) : (\r\n          <img src={props.picture} alt=\"N/A\" className={classes.Img} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n  return <div>{!props.success ? showInfo : <p> No Results Found</p>}</div>;\r\n};\r\n\r\nexport default PictureInfo;\r\n","import React from \"react\";\r\nimport {Toolbar, AppBar, Typography} from \"@material-ui/core\";\r\nimport classes from \"./Appbar.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const Appbar = props => {\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" elevation={0} className={classes.appBar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            NASA API Client\r\n          </Typography>{\" \"}\r\n          <Typography\r\n            variant=\"h4\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            {props.title}\r\n          </Typography>\r\n          <nav>\r\n            <Link to=\"/\" className={classes.link}>\r\n              APOD\r\n            </Link>\r\n            <Link to=\"/mars-rover\" className={classes.link}>\r\n              Mars Rover\r\n            </Link>\r\n          </nav>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n","export const formatDate = date => {\r\n  let result = date.toLocaleDateString(\"ko-KR\", {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n  });\r\n\r\n  result = result\r\n    .replaceAll(\". \", \"/\")\r\n    .replaceAll(\".\", \"\")\r\n    .replaceAll(\"/\", \"-\");\r\n\r\n  return result;\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport DateForm from \"../../components/DateForm/DateForm\";\r\nimport PictureInfo from \"../../components/PictureInfo/PictureInfo\";\r\nimport {Appbar} from \"../../components/AppBar/Appbar\";\r\nimport classes from \"./APOD.module.css\";\r\nimport {formatDate} from \"../../util\";\r\nimport axios from \"axios\";\r\n\r\nconst APOD = props => {\r\n  const [picture, setPicture] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [picDate, setPicDate] = useState(\"\");\r\n  const [copyRight, setCopyright] = useState(\"\");\r\n\r\n  const [inputDate, handleDateChange] = useState(new Date());\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getPictureOfTheDay(inputDate);\r\n  }, []);\r\n\r\n  const getPictureOfTheDay = async showToday => {\r\n    setLoading(true);\r\n    let date;\r\n\r\n    if (showToday) {\r\n      handleDateChange(new Date());\r\n      date = formatDate(new Date());\r\n    } else {\r\n      date = formatDate(inputDate);\r\n    }\r\n\r\n    let url = `https://api.nasa.gov/planetary/apod?date=${date}&api_key=kvrxQ3qubIwJq4LxYXvFeer9WgfGn8ngDH9e2snK`;\r\n\r\n    await axios\r\n      .get(url)\r\n      .then(res => {\r\n        setPicture(res.data.url);\r\n        setTitle(res.data.title);\r\n        setDesc(res.data.explanation);\r\n        setPicDate(res.data.date);\r\n        setCopyright(res.data.copyright);\r\n        setLoading(false);\r\n        setSuccess(true);\r\n      })\r\n      .catch(err => {\r\n        alert(\"Date is not valid\");\r\n        handleDateChange(new Date());\r\n        setLoading(false);\r\n        setSuccess(false);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    getPictureOfTheDay(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.APOD}>\r\n      <DateForm\r\n        getPictureOfTheDay={getPictureOfTheDay}\r\n        handleSubmit={handleSubmit}\r\n        date={inputDate}\r\n        handleDateChange={handleDateChange}\r\n      />\r\n      <p>\r\n        <i>Valid dates start June 16, 1995</i>\r\n      </p>\r\n      <PictureInfo\r\n        title={title}\r\n        date={picDate}\r\n        desc={desc}\r\n        picture={picture}\r\n        copyRight={copyRight}\r\n        sucess={success}\r\n        loading={loading}\r\n        setLoading={setLoading}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default APOD;\r\n","import React from \"react\";\r\nimport APOD from \"./containers/AstronomyPicOfTheDay/APOD\";\r\nimport MarsRover from \"./containers/MarsRover/MarsRover\";\r\nimport {Appbar} from \"./components/AppBar/Appbar\";\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  let baseUrl = \"https://bryanborge.github.io/nasa-api-client\";\r\n  return (\r\n    <div>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Router basename={window.location.pathname || \"\"}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Appbar title=\"Astronomy Picture Of The Day\" />\r\n              <APOD />\r\n            </Route>\r\n            <Route exact path=\"/mars-rover\">\r\n              <Appbar title=\"Mars Rover\" />\r\n              {/* <MarsRover /> */}\r\n              <h1>Coming soon</h1>\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { FETCH_APOD } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  picture: \"\",\r\n  title: \"\",\r\n  desc: \"\",\r\n  copyRight: \"\",\r\n  year: \"\",\r\n  month: \"\",\r\n  day: \"\",\r\n  date: \"\",\r\n  loading: false,\r\n  success: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action) {\r\n    case FETCH_APOD:\r\n        return {\r\n            ...state,\r\n            items: action.payload\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport apodReducer from './store/reducers/apod'\r\nimport marsRoverReducer from './store/reducers/marsRover'\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n    apod: apodReducer,\r\n    marsRover: marsRoverReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n)\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const FETCH_APOD = \"FETCH_APOD\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Appbar_toolbar__2syfW\",\"appBar\":\"Appbar_appBar__1G191\",\"toolbarTitle\":\"Appbar_toolbarTitle__3dpNw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"DateForm_Form__2mbMX\",\"Input\":\"DateForm_Input__1JszL\",\"Button\":\"DateForm_Button__32Hnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Info\":\"PictureInfo_Info__bpmql\",\"Img\":\"PictureInfo_Img__2uQRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"RoverInfo_card__mc8SH\",\"container\":\"RoverInfo_container__24J1D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"APOD\":\"APOD_APOD__A47jU\",\"Info\":\"APOD_Info__SD1ug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roverForm\":\"RoverForm_roverForm__2eBKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roverInfo\":\"MarsRover_roverInfo__1kwSp\"};"],"sourceRoot":""}