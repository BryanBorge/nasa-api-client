{"version":3,"sources":["components/DateForm/DateForm.js","components/PictureInfo/PictureInfo.js","components/AppBar/Appbar.js","util.js","containers/AstronomyPicOfTheDay/APOD.js","components/RoverForm/RoverForm.js","components/RoverInfo/RoverInfo.js","components/Pagination.js","containers/MarsRover/RoverTable.js","containers/MarsRover/MarsRover.js","App.js","serviceWorker.js","store/reducers/apod.js","index.js","store/actions/actionTypes.js","components/RoverForm/RoverForm.module.css","components/DateForm/DateForm.module.css","components/AppBar/Appbar.module.css","components/PictureInfo/PictureInfo.module.css","containers/AstronomyPicOfTheDay/APOD.module.css","components/RoverInfo/RoverInfo.module.css","containers/MarsRover/MarsRover.module.css"],"names":["DateForm","props","className","classes","Form","Grid","container","direction","justify","alignItems","item","sm","Input","clearable","value","date","placeholder","onChange","console","log","handleDateChange","maxDate","Date","minDate","format","Button","onClick","handleSubmit","variant","getPictureOfTheDay","PictureInfo","credit","copyRight","showInfo","loading","Info","title","split","join","toLocaleDateString","weekday","year","month","day","desc","picture","includes","url","controls","reactplayer","src","alt","Img","success","Appbar","AppBar","position","elevation","appBar","Toolbar","toolbar","Typography","color","noWrap","toolbarTitle","to","link","formatDate","result","replaceAll","APOD","useState","setPicture","setTitle","setDesc","picDate","setPicDate","setCopyright","inputDate","setLoading","setSuccess","useEffect","showToday","a","axios","get","then","res","data","explanation","copyright","catch","err","alert","event","preventDefault","sucess","RoverForm","rovers","find","r","name","rover","roverForm","FormControl","formControl","InputLabel","Select","e","setRover","target","input","map","MenuItem","key","id","camera","disabled","setCamera","filter","cameras","cam","sol","setSol","RoverInfo","card","img_src","earth_date","full_name","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","number","href","useRowStyles","makeStyles","root","borderBottom","table","minWidth","Row","React","open","setOpen","Fragment","TableRow","TableCell","IconButton","aria-label","size","component","scope","align","launch_date","landing_date","max_date","max_sol","total_photos","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","gutterBottom","Table","TableHead","TableBody","CollapsibleTable","TableContainer","Paper","MarsRover","roverNames","setRovers","pictures","setPictures","currentPage","setCurentPage","response","prevState","getRoverPictures","photos","length","newInfo","indexOfLastPost","indexOfFirstPost","currentPost","slice","roverInfo","pageNumber","App","utils","DateFnsUtils","basename","window","location","pathname","exact","path","Boolean","hostname","match","initialState","rootReducer","combineReducers","apod","state","action","items","payload","marsRover","marsRoverReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.1bf0bb53.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport classes from \"./DateForm.module.css\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\n\r\nconst DateForm = props => {\r\n  return (\r\n    <div className={classes.Form}>\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item sm={1.5}>\r\n          <div className={classes.Input}>\r\n            <KeyboardDatePicker\r\n              clearable\r\n              value={props.date}\r\n              placeholder=\"MM/DD/YYYY\"\r\n              onChange={date => {\r\n                console.log(date);\r\n                props.handleDateChange(date);\r\n              }}\r\n              maxDate={new Date()}\r\n              minDate={new Date(\"Fri Jun 16 1995 00:00:00 GMT-0400\")}\r\n              format=\"MM/dd/yyyy\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item sm={1.5}>\r\n          <div className={classes.Button}>\r\n            <Button\r\n              onClick={props.handleSubmit}\r\n              variant=\"contained\"\r\n              className={classes.Button}\r\n            >\r\n              Search\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        <Grid item sm={1.5}>\r\n          <div className={classes.Button}>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => props.getPictureOfTheDay(true)}\r\n              className={classes.Button}\r\n            >\r\n              Todays Picture\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateForm;\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport classes from \"./PictureInfo.module.css\";\r\n\r\nconst PictureInfo = props => {\r\n  let options = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  let credit = props.copyRight && <p> Image Credit: {props.copyRight}</p>;\r\n  let showInfo = props.loading ? (\r\n    <p> LOADING </p>\r\n  ) : (\r\n    <div>\r\n      <div className={classes.Info}>\r\n        <h2>{props.title}</h2>\r\n        <p>\r\n          {new Date(props.date.split(\"-\").join(\"/\")).toLocaleDateString(\r\n            \"en-US\",\r\n            options\r\n          )}\r\n        </p>\r\n        <p>{props.desc}</p>\r\n        <div>{credit}</div>\r\n      </div>\r\n      <div>\r\n        {props.picture.includes(\"youtube\") ? (\r\n          <ReactPlayer\r\n            url={props.picture}\r\n            controls={true}\r\n            className={classes.reactplayer}\r\n          />\r\n        ) : (\r\n          <img src={props.picture} alt=\"N/A\" className={classes.Img} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n  return <div>{!props.success ? showInfo : <p> No Results Found</p>}</div>;\r\n};\r\n\r\nexport default PictureInfo;\r\n","import React from \"react\";\r\nimport {Toolbar, AppBar, Typography} from \"@material-ui/core\";\r\nimport classes from \"./Appbar.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const Appbar = props => {\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" elevation={0} className={classes.appBar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            NASA API Client\r\n          </Typography>{\" \"}\r\n          <Typography\r\n            variant=\"h4\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            {props.title}\r\n          </Typography>\r\n          <nav>\r\n            <Link to=\"/\" className={classes.link}>\r\n              APOD\r\n            </Link>\r\n            <Link to=\"/mars-rover\" className={classes.link}>\r\n              Mars Rover\r\n            </Link>\r\n          </nav>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n","export const formatDate = date => {\r\n  let result = date.toLocaleDateString(\"ko-KR\", {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n  });\r\n\r\n  result = result\r\n    .replaceAll(\". \", \"/\")\r\n    .replaceAll(\".\", \"\")\r\n    .replaceAll(\"/\", \"-\");\r\n\r\n  return result;\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport DateForm from \"../../components/DateForm/DateForm\";\r\nimport PictureInfo from \"../../components/PictureInfo/PictureInfo\";\r\nimport {Appbar} from \"../../components/AppBar/Appbar\";\r\nimport classes from \"./APOD.module.css\";\r\nimport {formatDate} from \"../../util\";\r\nimport axios from \"axios\";\r\n\r\nconst APOD = props => {\r\n  const [picture, setPicture] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [picDate, setPicDate] = useState(\"\");\r\n  const [copyRight, setCopyright] = useState(\"\");\r\n\r\n  const [inputDate, handleDateChange] = useState(new Date());\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getPictureOfTheDay(inputDate);\r\n  }, []);\r\n\r\n  const getPictureOfTheDay = async showToday => {\r\n    setLoading(true);\r\n    let date;\r\n\r\n    if (showToday) {\r\n      handleDateChange(new Date());\r\n      date = formatDate(new Date());\r\n    } else {\r\n      date = formatDate(inputDate);\r\n    }\r\n\r\n    let url = `https://api.nasa.gov/planetary/apod?date=${date}&api_key=kvrxQ3qubIwJq4LxYXvFeer9WgfGn8ngDH9e2snK`;\r\n\r\n    await axios\r\n      .get(url)\r\n      .then(res => {\r\n        setPicture(res.data.url);\r\n        setTitle(res.data.title);\r\n        setDesc(res.data.explanation);\r\n        setPicDate(res.data.date);\r\n        setCopyright(res.data.copyright);\r\n        setLoading(false);\r\n        setSuccess(true);\r\n      })\r\n      .catch(err => {\r\n        alert(\"Date is not valid\");\r\n        handleDateChange(new Date());\r\n        setLoading(false);\r\n        setSuccess(false);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    getPictureOfTheDay(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.APOD}>\r\n        <DateForm\r\n          getPictureOfTheDay={getPictureOfTheDay}\r\n          handleSubmit={handleSubmit}\r\n          date={inputDate}\r\n          handleDateChange={handleDateChange}\r\n        />\r\n        <p>\r\n          <i>Valid dates start June 16, 1995</i>\r\n        </p>\r\n        <PictureInfo\r\n          title={title}\r\n          date={picDate}\r\n          desc={desc}\r\n          picture={picture}\r\n          copyRight={copyRight}\r\n          sucess={success}\r\n          loading={loading}\r\n          setLoading={setLoading}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default APOD;\r\n","import React, {useState} from \"react\";\r\nimport classes from \"./RoverForm.module.css\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  Select,\r\n  FormControl,\r\n  MenuItem,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nconst RoverForm = props => {\r\n  const handleRoverChange = e => {\r\n    props.setRover(e.target.value);\r\n  };\r\n  const hanldeSolChange = e => {\r\n    props.setSol(e.target.value);\r\n  };\r\n  const handleCameraChange = e => {\r\n    props.setCamera(e.target.value);\r\n  };\r\n\r\n  let currentRoverData = props.rovers.find(r => r.name === props.rover);\r\n\r\n  return (\r\n    <div className={classes.roverForm}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel>Rover</InputLabel>\r\n        <Select\r\n          value={props.rover}\r\n          onChange={handleRoverChange}\r\n          className={classes.input}\r\n        >\r\n          {props.rovers.map(rover => (\r\n            <MenuItem key={rover.id} value={rover.name}>\r\n              {rover.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel>Camera</InputLabel>\r\n        <Select\r\n          value={props.camera}\r\n          disabled={!props.rover}\r\n          onChange={handleCameraChange}\r\n          className={classes.input}\r\n        >\r\n          <MenuItem key={\"empty\"} value={\"All Cameras\"}>\r\n            {\"All cameras\"}\r\n          </MenuItem>\r\n          {props.rovers\r\n            .filter(rover => rover.name === props.rover)\r\n            .map(rover =>\r\n              rover.cameras.map(cam => (\r\n                <MenuItem key={cam.name} value={cam.name}>\r\n                  {cam.name}\r\n                </MenuItem>\r\n              ))\r\n            )}\r\n        </Select>\r\n      </FormControl>{\" \"}\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel>Sol</InputLabel>\r\n        <Input\r\n          value={props.sol}\r\n          disabled={!props.rover}\r\n          onChange={hanldeSolChange}\r\n          className={classes.input}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        onClick={props.handleSubmit}\r\n        variant=\"contained\"\r\n        className={classes.Button}\r\n      >\r\n        Search\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoverForm;\r\n","import React from \"react\";\r\nimport classes from \"./RoverInfo.module.css\";\r\n\r\nconst RoverInfo = props => {\r\n\r\n  if(props.loading) {\r\n    return (\r\n      <h1>Loading...</h1>\r\n    )\r\n  }\r\n\r\n\r\n  return props.data.map(data => (\r\n    <div className={classes.card}>\r\n      <img src={data.img_src} alt=\"N/A\"/>\r\n      <p>ID: {data.id}</p>\r\n      <div className={classes.container}>\r\n        <h2>{data.earth_date}</h2>\r\n        <p>\r\n          {data.rover.name} - {data.camera.full_name} ({data.camera.name})\r\n        </p>\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default RoverInfo;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <div className=\"text-center\">\r\n      <nav>\r\n        <ul className=\"pagination\">\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className=\"page-item\">\r\n              <a\r\n                onClick={() => {\r\n                  paginate(number);\r\n                }}\r\n                href=\"!#\"\r\n                className=\"page-link\"\r\n              >\r\n                {number}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    \"& > *\": {\r\n      borderBottom: \"unset\",\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n});\r\n\r\nfunction Row(props) {\r\n  const {rover} = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {rover.name}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{rover.launch_date}</TableCell>\r\n        <TableCell align=\"right\">{rover.landing_date}</TableCell>\r\n        <TableCell align=\"right\">{rover.max_date}</TableCell>\r\n        <TableCell align=\"right\">{rover.max_sol}</TableCell>\r\n        <TableCell align=\"right\">{rover.total_photos}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={7}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Cameras\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Abbrev</TableCell>\r\n                    <TableCell>Full name</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rover.cameras.map(camera => (\r\n                    <TableRow key={camera.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {camera.name}\r\n                      </TableCell>\r\n                      <TableCell>{camera.full_name}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport function CollapsibleTable(props) {\r\n  const classes = useRowStyles();\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\">\r\n        <caption>\r\n          Query pictures by selecting a rover, a camera, and a sol value from\r\n          ranging from 0-Max Sol for that rover. <br />\r\n          Or get all pictures for a sol by not selecting a camera.\r\n          <br />\r\n          *sol - Martian rotation or day.\r\n        </caption>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Rover Name</TableCell>\r\n            <TableCell align=\"right\">Launch date</TableCell>\r\n            <TableCell align=\"right\">Landing date</TableCell>\r\n            <TableCell align=\"right\">Max date</TableCell>\r\n            <TableCell align=\"right\">Max Sol</TableCell>\r\n            <TableCell align=\"right\">Total Pictures</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.rovers.map(rover => (\r\n            <Row key={rover.id} rover={rover} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport RoverForm from \"../../components/RoverForm/RoverForm\";\r\nimport RoverInfo from \"../../components/RoverInfo/RoverInfo\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport axios from \"axios\";\r\nimport {CollapsibleTable} from \"./RoverTable\";\r\nimport classes from \"./MarsRover.module.css\";\r\n\r\nconst MarsRover = props => {\r\n  let roverNames = [\"Curiosity\", \"Spirit\", \"Opportunity\"];\r\n\r\n  //State for input form\r\n  const [rover, setRover] = useState(\"\");\r\n  const [sol, setSol] = useState(\"\");\r\n  const [camera, setCamera] = useState(\"\");\r\n\r\n  //State containing rover information\r\n  const [rovers, setRovers] = useState([]);\r\n\r\n  //State containing pictures from the query\r\n  const [pictures, setPictures] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(true);\r\n\r\n  const [currentPage, setCurentPage] = useState(1);\r\n  const [postsPerPage] = useState(30);\r\n\r\n  const getRoverInfo = () => {\r\n    roverNames.map(rover => {\r\n      axios\r\n        .get(\r\n          `https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/?api_key=kvrxQ3qubIwJq4LxYXvFeer9WgfGn8ngDH9e2snK`\r\n        )\r\n        .then(response => {\r\n          setRovers(prevState => [...prevState, response.data.rover]);\r\n        })\r\n        .catch(err => {\r\n          setSuccess(false);\r\n          setLoading(false);\r\n          alert(\"Error\");\r\n        });\r\n    });\r\n  };\r\n\r\n  //Load rover data to display in table\r\n  useEffect(() => {\r\n    getRoverInfo();\r\n  }, []);\r\n\r\n  const getRoverPictures = async () => {\r\n    if (rover === \"\" || sol === \"\") {\r\n      setLoading(false);\r\n      alert(\"Choose and rover and sol to search\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    console.log(rover);\r\n    console.log(sol);\r\n\r\n    let url = `https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${sol}&api_key=kvrxQ3qubIwJq4LxYXvFeer9WgfGn8ngDH9e2snK`;\r\n    if (camera !== \"All Cameras\") {\r\n      url = `https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?sol=${sol}&camera=${camera}&api_key=kvrxQ3qubIwJq4LxYXvFeer9WgfGn8ngDH9e2snK`;\r\n    }\r\n\r\n    await axios\r\n      .get(url)\r\n      .then(response => {\r\n        console.log(response);\r\n        if (response.data.photos.length > 1) {\r\n          const newInfo = response.data.photos;\r\n          setPictures(newInfo);\r\n          setLoading(false);\r\n          setSuccess(true);\r\n        } else {\r\n          setLoading(false);\r\n          setSuccess(false);\r\n          alert(\"No pictures found\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setSuccess(false);\r\n        setLoading(false);\r\n        alert(\"Error\");\r\n      });\r\n  };\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPost = pictures.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const paginate = pageNumber => {\r\n    setCurentPage(pageNumber);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    getRoverPictures();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RoverForm\r\n        rovers={rovers}\r\n        rover={rover}\r\n        setRover={setRover}\r\n        sol={sol}\r\n        setSol={setSol}\r\n        camera={camera}\r\n        setCamera={setCamera}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n      <div className={classes.container}>\r\n        <CollapsibleTable rovers={rovers} />\r\n      </div>\r\n      <div className={classes.roverInfo}>\r\n        <RoverInfo data={currentPost} loading={loading} success={success} />\r\n      </div>\r\n      <Pagination\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={pictures.length}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarsRover;\r\n","import React from \"react\";\r\nimport APOD from \"./containers/AstronomyPicOfTheDay/APOD\";\r\nimport MarsRover from \"./containers/MarsRover/MarsRover\";\r\nimport {Appbar} from \"./components/AppBar/Appbar\";\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Router basename={window.location.pathname || \"\"}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Appbar title=\"Astronomy Picture Of The Day\" />\r\n              <APOD />\r\n            </Route>\r\n            <Route exact path=\"/mars-rover\">\r\n              <Appbar title=\"Mars Rover\" />\r\n              <MarsRover />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { FETCH_APOD } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  picture: \"\",\r\n  title: \"\",\r\n  desc: \"\",\r\n  copyRight: \"\",\r\n  year: \"\",\r\n  month: \"\",\r\n  day: \"\",\r\n  date: \"\",\r\n  loading: false,\r\n  success: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action) {\r\n    case FETCH_APOD:\r\n        return {\r\n            ...state,\r\n            items: action.payload\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport apodReducer from './store/reducers/apod'\r\nimport marsRoverReducer from './store/reducers/marsRover'\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n    apod: apodReducer,\r\n    marsRover: marsRoverReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n)\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const FETCH_APOD = \"FETCH_APOD\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roverForm\":\"RoverForm_roverForm__2eBKo\",\"formControl\":\"RoverForm_formControl__3GbTV\",\"input\":\"RoverForm_input__3VPsc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"DateForm_Form__2mbMX\",\"Input\":\"DateForm_Input__1JszL\",\"Button\":\"DateForm_Button__32Hnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Appbar_toolbar__2syfW\",\"appBar\":\"Appbar_appBar__1G191\",\"toolbarTitle\":\"Appbar_toolbarTitle__3dpNw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Info\":\"PictureInfo_Info__bpmql\",\"Img\":\"PictureInfo_Img__2uQRj\",\"reactplayer\":\"PictureInfo_reactplayer__3-9sb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"APOD\":\"APOD_APOD__A47jU\",\"Info\":\"APOD_Info__SD1ug\",\"container\":\"APOD_container__1aPe7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"RoverInfo_card__mc8SH\",\"container\":\"RoverInfo_container__24J1D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roverInfo\":\"MarsRover_roverInfo__1kwSp\",\"container\":\"MarsRover_container__2ewX5\"};"],"sourceRoot":""}